name: Publish Python 🐍 distributions 📦 to PyPI

on:
  push:
    tags:
      - "*"

jobs:
  build-and-store:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: >-
          python -m
          pip install --upgrade numpy
      - name: Install pypa/setuptools
        run: >-
          python -m
          pip install wheel
      - name: Show current version
        run: >-
          echo "Current version: $GITHUB_REF"
      - name: Extract tag name from GITHUB_REF
        id: tag
        # run: echo ::set-output name=TAG_NAME::$(echo $GITHUB_REF | cut -d / -f 3)
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Show github ref name
        run: >-
          echo "Tag name from github.ref_name: ${{ github.ref_name }}"
      - name: Update version in setup.py on Linux
        if: >-
          runner.os == 'Linux'
        run: >-
          sed -i "s/{{VERSION}}/${{ github.ref_name }}/g" setup.py
      - name: Update version in setup.py on macOS
        if: >-
          runner.os == 'macOS'
        run: >-
          sed -i '' "s/{{VERSION}}/${{ github.ref_name }}/g" setup.py
      - name: Update version in setup.py on Windows
        if: >-
          runner.os == 'Windows'
        run: >-
          sed -i "s/{{VERSION}}/${{ github.ref_name }}/g" setup.py
      - name: Build a binary wheel on Linux
        run: >-
          python setup.py sdist bdist_wheel --plat-name manylinux1_x86_64
      - name: Build a binary wheel on macOS
        if: >-
          runner.os == 'macOS'
        run: >-
          python setup.py sdist bdist_wheel
      - name: Build a binary wheel on Windows
        if: >-
          runner.os == 'Windows'
        run: >-
          python setup.py sdist bdist_wheel
      - name: Show the contents of dist/
        run: >-
          ls -l dist/
      - name: Store the binary wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build-and-store
    steps:
    - name: Download the binary wheel
      uses: actions/download-artifact@v2
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
        skip-existing: true